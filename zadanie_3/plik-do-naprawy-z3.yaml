
apiVersion: v1
kind: ConfigMap
metadata:
  name: webapp-config
data:
  APP_MODE: "production"
  LOG_LEVEL: "info"

  nginx.conf: | # indentation was incorrect (or it just copied that way xd)
    server {
      listen 80;
      server_name localhost;
      location / {
        root /usr/share/nginx/html;
        index index.html;
      }
    }

---

apiVersion: v1
kind: Secret
metadata:
  name: webapp-secrets
# type: Opaque  kubernetes.io/tls is incorrect type for plain text passwords
stringData:
  DB_USERNAME: "admin"
  DB_PASSWORD: "SuperSecret123"
  API_KEY: "sk-1234567890abcdef"
 # but like, meh, it's better to use Opaque + base64 here i guess 
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webapp

  template:
    metadata:
      labels:
        app: webapp
    spec:

      containers:
      - name: webapp
        image: nginx:latest

        ports:
        - containerPort: 80    
        envFrom: # not env
        - configMapRef: # indentaion again?  
            name: webapp-config

        - secretRef:
            name: webapp-secrets

        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        - name: secret-volume
          mountPath: /etc/secrets
          readOnly: true # only read only

     
        startupProbe:
          exec: # nothing was going on in exec, so added example command
            command:
              - cat 
              - /checks/healthy
            #path: / those are for httpGet probe type, so commented out 
            #port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 30

        # added resources just for k8s vscode extension not to scream at me
        resources: 
          requests:
            memory: "128Mi"
            cpu:  "100m"

          limits:
            memory: "256Mi"
            cpu: "1000m"



      volumes:
      - name: config-volume
        configMap:
          name: webapp-config
      - name: secret-volume
        secret:
          secretName: webapp-secrets

---

apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  selector:
    app: webapp # changed to webapp so it will be able to find pods defined in the deployment
  ports:
  - port: 80        
    targetPort: 80      
    nodePort: 8000  # not valid node port ?   
  type: NodePort         